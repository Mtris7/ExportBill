<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAABLtJREFUSEu1
        lWtMW2UYx2s0UaPxu4nRmPhFTfywrCBsU4ZAuUPZujGmgBRwQ25LsLTnnJYiMMYoBcq19HbaUoYMHAhb
        KBQ0QsTpoOKNJc6NxMTMjZFhYW7j8vi+h7cEwtFBYf/kn/dcnuf9nefpc04FjxIdK3xHKRZ+zsQLb1Px
        exfRuoDOu2QJ/i+RkN2VOijoGWW8sFN5yG++Pi14hc2OBEdeLNhyo6E69eBDRiycZcR7XifhuydG7Ndb
        nrj/XmteDLSdit3k+oyQZdwFOs6PKgh76zmStjMpxHuiVYf853GFfFBsB7LhpAgqjh9YQA/5A+rQUyTd
        dzEJfkON6SG8QK/r0oLBeDKcOy49EuhBlYtJuu9CLZyz5UZtgmG35seANuUgVH74LpQmBoL+ozCol4YA
        mgUTSfdddJxwyZGP2xkDpqwIMJwQgR65ThoMJUcDwCKLgdkxNUx1n4Jiydsr+swwUKIukXTfRccL71o+
        juQg1enB0JgtguZcEXQWS+C33gJYmChbs+qw/0pN6kFccTdJ910qsd9IWeI+aMwN2wDhc0lSwHLJkYAl
        WiyUk3TfVZl5YISK2wtWOpoXtt6lSYFAo1htVlAeSfddTXTIg6LD/lsClx0PBG1GEBiLwp0k3XcZVKLL
        JjoSLtUm8cLWu0kmAlYddb+BDikg6b6rWfHeG3omdH7Els4LW2/76RjQM2Fu7amAZ0n6ztRMhx7r1R39
        mw/m9fx4GYY+0KkjXiBpO5eeEr3YohItzHyj4oVi/9SdAwZ1hJuk7J5aikQVHZoEuPvdp5ugfwwr8EAt
        NylC95Hw3dOX6MPfzISBrTQa3OezwDNeCnfQF+srSyqGAurIFAndIKbS8Kqyxm5naqyzCo1pCa9FNTYr
        vk5C/l8dEsmTjVTIirszC85XJQBbEgkmdThcajwGozYpGNXhIyR0TXKtMVxZY/U4XOOLozfmwH1rGfDa
        is7RA3gojVlEQjfrfaP8tVSL/GyGhb7WyIjgZ/RbXncWcOvVvnzueNicAhVnJCtSlvoznVW0JZsK969W
        avUMXf0LJu/AJrumbgJTbfXQGuMrBLWqHF3O02kspUebLVS4mh46Jrugva8c2NNx8OOFbA6IPebIAENx
        FPRMnIOOX3pA97V55YRd5ZHVN9zElfJBvW4dvLKoqrWyBCkQSBrUz0stlJvq0cz3XeuHgemhNXf1a0Gv
        jgRzKfrzx+tZCfR+79gQ039jEJR1LNdWPqDXo9NzgFo+s0oFwRNSVuEqvlh7zznt2rCh187fB6Bvoh0u
        Tnby3semqkzcb8oH9Hri1hJQGtMix/3AWJiY01bs6b/OD92q1Q22R1eM7qOKb3NgqZWatrvP8262Hdd1
        deLp5QV63TpwZVFZY7MIUloK38y0Kz3/1eLt2Dx4AU8tN7180KFfV6e68Iz+ZUGK6ZNk5RdaD99G2zE7
        3A1FOis0feZEm7NgH7iyjAeJe4/RiivFUJnGEMq1OdkgUyYbZbATZzWUA1NrgTbnGDA6donWGhn8yuDp
        lVdxX64Z3F6u0t0SU2Wm1Tr7fLvrMiDYglxjzCK3Hq/kGtP9c85vAcNpjVlGLj9+0VpLC3ov/0ErRS5t
        QQLBvzeddoAsvS8BAAAAAElFTkSuQmCC
</value>
  </data>
</root>